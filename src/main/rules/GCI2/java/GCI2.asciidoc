:!sectids:

One variable should be used at most twice in `if...else if...else` statements:

- variable is used explicitly in `if` and `else if` statements
- variable is used implicitly in `else` statements

== Why is this an issue?

Performance is impacted by many conditional `if`, `else if` or `else` statements, which is sometimes called "cyclomatic complexity".

Switch statement has a performance advantage over `if...else`.

== How to fix it

=== Noncompliant code example

Code is noncompliant, because `nb` is used 4 times:

- 3 times explicitly in `if` statements
- 1 time implicitly in `else` statement

[source,java]
----
// Noncompliant
int index = 1;
int nb = 2;
...
if (nb == 0) {
    nb = index;
} else if (nb == 1) {
    nb = index * 2;
} else if (nb == 2) {
    nb = index * 3;
} else {
    nb = -1;
}
return nb;
----

=== Compliant solution

A switch statement can be used instead of multiple `if...else` if possible, or code can be refactored to reduce number of `if...else if...else` statements.

With a `switch` statement:

[source,java]
----
int index = 1;
int nb = 2;
...
switch (nb) {
    case 0:
    case 1:
    case 2:
        nb = index * (nb + 1);
        break;
    default:
        nb = -1;
}
return nb;
----

== Resources

Reference/Validation is unknown.
