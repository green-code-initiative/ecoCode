:!sectids:

One variable should be used at most twice in `if...elif...else` statements:

- variable is used explicitly in `if` and `elif` statements
- variable is used implicitly in `else` statements

== Why is this an issue?

Performance is impacted by many conditional `if`, `elif` or `else` statements, which is sometimes called "cyclomatic complexity".

Switch statement has a performance advantage over `if...else`.

== How to fix it

=== Noncompliant code example

Code is noncompliant, because `nb` is used 4 times:

- 3 times explicitly in `if` and `elif` statements
- 1 time implicitly in `else` statement

[source,python]
----
# Noncompliant
index = 1
nb = 2
...
if nb == 0:
    nb = index
elif nb == 1:
    nb = index * 2
elif nb == 2:
    nb = index * 3
else:
    nb = -1
return nb
----

=== Compliant solution

A switch statement can be used instead of multiple `if...else` if possible, or code can be refactored to reduce number of `if...elif...else` statements.

With a `switch`:

[source,python]
----
index = 1
nb = 2
...
match nb:
    case 0:
        nb = index * (nb + 1)
    case 1:
        nb = index * (nb + 1)
    case 2:
        nb = index * (nb + 1)
    case _:
        nb = -1
return nb
----

== Resources

Reference/Validation is unknown.
