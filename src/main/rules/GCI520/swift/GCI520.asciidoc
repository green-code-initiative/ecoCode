:!sectids:

== Why is this an issue?

Use device API to check if low power mode is enabled, and adapt resources usage accordingly.

For example, you can reduce frequency of data update if low power mode is enabled.

Your app can query the `ProcessInfo.processInfo.isLowPowerModeEnabled` property at any time to determine whether Low Power Mode is active. Your app can also register to receive notifications when the Low Power Mode state of a device changes, using `NSProcessInfoPowerStateDidChange`.

== How to fix it
=== Noncompliant code example

[source,swift]
----
// Noncompliant
// No handling of power mode
----

=== Compliant solution

[source,swift]
----
let isLowPowerModeEnabled = ProcessInfo.processInfo.isLowPowerModeEnabled
----

or

[source,swift]
----
NotificationCenter.default.addObserver(forName: .NSProcessInfoPowerStateDidChange, object: nil, queue: nil) { _ in }
----

or

[source,swift]
----
NotificationCenter.default.addObserver(forName: Notification.Name.NSProcessInfoPowerStateDidChange, object: nil, queue: nil) { _ in }
----

== Resources

- https://github.com/cnumr/best-practices-mobile[Mobile-specific Best Practices] by https://collectif.greenit.fr/index_en.html[CNumR]
