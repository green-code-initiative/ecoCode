:!sectids:

== Why is this an issue?


Inside complex code parts (for exemple multiple loops, complex data constructions...), avoid using try...catch.

When an exception is thrown, a variable (the exception itself) is created in a catch block and it's destruction consumes unnecessary CPU cycles and RAM. Prefer using logical tests in this cases.

== How to fix it
=== Noncompliant code example

[source,php]
----
// Noncompliant
try
{
  $picture = PDF_open_image_file($PDF, "jpeg", $imgFile, "", 0); // This is the original statement, this works on PHP4
}
catch(Exception $ex)
{
  $msg = "Error opening $imgFile for Product $row['Identifier']";
  throw new Exception($msg);
}
----

=== Compliant solution

[source,php]
----
//try
if (file_exists($imgFile)) {
    $picture = PDF_open_image_file($PDF, "jpeg", $imgFile, "", 0);
}

//catch
if (!$picture) {
   $msg = "Error opening $imgFile for Product $row['Identifier']";
   print $msg;
}
----

== Resources

=== Impact

include::../../etsdiff-methodology.asciidoc[]

==== Case for a 1GB database

image::https://live.staticflickr.com/65535/52622382871_f19da08db4_o.png[ETSdiff percent comparison]

[format=csv,cols="1h,1,1"]
|===
Source of impacts,Compliant,Noncompliant

include::1GB.etsdiff.csv[]
|===
