:!sectids:

== Why is this an issue?

The form `$i++` creates a temporary variable whereas `++$i` does not. It save CPU cycles.

== How to fix it
=== Noncompliant code example

[source,php]
----
// Noncompliant
$i++
----

=== Compliant solution

[source,php]
----
++$i
----

== Resources

=== Best practises

- https://www.greenit.fr/2019/05/07/ecoconception-web-les-115-bonnes-pratiques-3eme-edition/[CNumR best practices (3rd edition) BP_067 (no longer exists in edition 4)]

=== Impact

include::../../etsdiff-methodology.asciidoc[]

==== Case for a 1GB database

image::https://live.staticflickr.com/65535/52622379586_f84c767111_o.png[ETSdiff percent comparison]

[format=csv,cols="1h,1,1"]
|===
Source of impacts,Compliant,Noncompliant

include::1GB.etsdiff.csv[]
|===
