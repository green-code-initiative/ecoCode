:!sectids:

== Why is this an issue?

Parameter of orElse() is evaluated, even when having a non-empty Optional.

Supplier method of orElseGet passed as an argument is only executed when an Optional value isnâ€™t present.

Therefore, using orElseGet() will save computing time.

== How to fix it
=== Noncompliant code example

[source,java]
----
// Noncompliant
Optional.of("ecoCode").orElse(getUnpredictedMethod());
----

=== Compliant solution

[source,java]
----
Optional.of("ecoCode").orElseGet(() -> getUnpredictedMethod());
----

[source,java]
----
randomClass.orElse(getUnpredictedMethod());
----

== Resources

- https://github.com/cnumr/best-practices/blob/main/chapters/BP_042_fr.md[CNumR best practices (3rd edition) BP_042]
